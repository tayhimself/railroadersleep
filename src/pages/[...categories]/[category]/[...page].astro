---
import { SITE, BLOG } from "~/config.mjs";

import Layout from "~/layouts/BlogLayout.astro";
import BlogList from "~/components/blog/List.astro";
import Pagination from "~/components/atoms/Pagination.astro";

import { fetchPosts } from "~/utils/posts";
import {
	getCanonical,
	getPermalink,
	cleanSlug,
	CATEGORY_BASE,
} from "~/utils/permalinks";

export async function getStaticPaths({ paginate }) {
	if (BLOG?.disabled || BLOG?.category?.disabled) return [];

	const posts = await fetchPosts();

	const categories = new Set();
	posts.map((post) => {
		typeof post.category === "string" && categories.add(post.category);
	});

	return Array.from(categories).map((category) =>
		paginate(
			posts.filter(
				(post) =>
					typeof post.category === "string" && category === post.category
			),
			{
				params: {
					category: cleanSlug(category),
					categories: CATEGORY_BASE || undefined,
				},
				pageSize: BLOG.postsPerPage,
				props: { category },
			}
		)
	);
}

const { page, category } = Astro.props;

const currentPage = page.currentPage ?? 1;

const meta = {
	title: `Category '${category}' ${
		currentPage > 1 ? `— Page ${currentPage} ` : ""
	}— ${SITE.name}`,
	description: SITE.description,
	canonical: getCanonical(getPermalink(page.url.current)),
	noindex: true,
};
---

<Layout meta={meta}>
	<div class="container mx-auto px-6 sm:px-6 max-w-4xl mt-8 mb-12">
		<Fragment slot="title">
			{category}
		</Fragment>
		<BlogList posts={page.data} />
		<Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
	</div>
</Layout>
